{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "germanynorth",
        "germanywestcentral"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "eventhubs_1_Connection_Name": {
      "type": "string",
      "defaultValue": "NotificationsHubConnection"
    },
    "eventhubs_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "NotificationsHubConnection"
    },
    "eventhubs_1_Consumer_Group": {
      "type": "string",
      "defaultValue": "$Default"
    },
    "eventhubs_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Event Hubs Connection String"
      }
    },
    "azureeventgridpublish_1_Connection_Name": {
      "type": "string",
      "defaultValue": "NotificationsGridConnection"
    },
    "azureeventgridpublish_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "NotificationsGridConnection"
    },
    "azureeventgridpublish_1_endpoint": {
      "type": "string",
      "metadata": {
        "description": "DNS endpoint for the application topic for events."
      },
      "defaultValue": ""
    },
    "azureeventgridpublish_1_api_key": {
      "type": "securestring",
      "metadata": {
        "description": "Primary or secondary key for the application topic."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "EventContent",
                    "type": "string",
                    "value": "@base64ToString(triggerBody()?['ContentData'])"
                  }
                ]
              },
              "runAfter": {}
            },
            "Parse_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@variables('EventContent')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "NodeId": {
                      "type": "string"
                    },
                    "ApplicationUri": {
                      "type": "string"
                    },
                    "Status": {
                      "type": "string"
                    },
                    "SourceTimestamp": {
                      "type": "string"
                    },
                    "AlternatingBoolean": {
                      "type": "boolean"
                    },
                    "ConnectionDeviceId": {
                      "type": "string"
                    }
                  }
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Publish_Event": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgridpublish_1']['connectionId']"
                  }
                },
                "method": "post",
                "body": [
                  {
                    "id": "@{body('Parse_JSON')?['ConnectionDeviceId']}/@{body('Parse_JSON')?['ApplicationUri']}/@{body('Parse_JSON')?['NodeId']}",
                    "subject": "IoT Notification",
                    "eventType": "Notification",
                    "data": {
                      "AlternatingBoolean": "@body('Parse_JSON')?['AlternatingBoolean']"
                    },
                    "eventTime": "@body('Parse_JSON')?['SourceTimestamp']"
                  }
                ],
                "path": "/eventGrid/api/events"
              },
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_events_are_available_in_Event_Hub": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['eventhubs_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent('notifications')}/events/batch/head",
                "queries": {
                  "contentType": "application/octet-stream",
                  "consumerGroupName": "[parameters('eventhubs_1_Consumer_Group')]",
                  "maximumEventsCount": 5
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 3
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureeventgridpublish_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureeventgridpublish')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureeventgridpublish_1_Connection_Name'))]",
                "connectionName": "[parameters('azureeventgridpublish_1_Connection_Name')]"
              },
              "eventhubs_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'eventhubs')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventhubs_1_Connection_Name'))]",
                "connectionName": "[parameters('eventhubs_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureeventgridpublish_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('eventhubs_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('eventhubs_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'eventhubs')]"
        },
        "displayName": "[parameters('eventhubs_1_Connection_DisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('eventhubs_1_connectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureeventgridpublish_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureeventgridpublish')]"
        },
        "displayName": "[parameters('azureeventgridpublish_1_Connection_DisplayName')]",
        "parameterValues": {
          "endpoint": "[parameters('azureeventgridpublish_1_endpoint')]",
          "api_key": "[parameters('azureeventgridpublish_1_api_key')]"
        }
      }
    }
  ],
  "outputs": {}
}