{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ASAApiVersion": {
      "type": "string"
    },
    "StreamAnalyticsJobName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "metadata": {
        "description": "Stream Analytics Job Name, can contain alphanumeric characters and hypen and must be 3-63 characters long"
      }
    },
    "Location": {
      "type": "string"
    },
    "OutputStartMode": {
      "type": "string",
      "allowedValues": [
        "JobStartTime",
        "CustomTime",
        "LastOutputEventTime"
      ]
    },
    "OutputStartTime": {
      "type": "string"
    },
    "DataLocale": {
      "type": "string"
    },
    "OutputErrorPolicy": {
      "type": "string",
      "allowedValues": [
        "Drop",
        "Stop"
      ]
    },
    "EventsLateArrivalMaxDelayInSeconds": {
      "type": "int"
    },
    "EventsOutOfOrderMaxDelayInSeconds": {
      "type": "int"
    },
    "EventsOutOfOrderPolicy": {
      "type": "string",
      "allowedValues": [
        "Adjust",
        "Drop"
      ]
    },
    "StreamingUnits": {
      "type": "int",
      "minValue": 1,
      "maxValue": 192,
      "metadata": {
        "description": "Number of Streaming Units"
      },
      "allowedValues": [
        1,
        3,
        6,
        12,
        18,
        24,
        30,
        36,
        42,
        48,
        54,
        60,
        66,
        72,
        78,
        84,
        90,
        96,
        102,
        108,
        114,
        120,
        126,
        132,
        138,
        144,
        150,
        156,
        162,
        168,
        174,
        180,
        186,
        192
      ]
    },
    "CompatibilityLevel": {
      "type": "string",
      "allowedValues": [
        "1.0",
        "1.1",
        "1.2"
      ]
    },
    "Input_iothub_iotHubNamespace": {
      "type": "string"
    },
    "Input_iothub_consumerGroupName": {
      "type": "string"
    },
    "Input_iothub_endpoint": {
      "type": "string"
    },
    "Input_iothub_sharedAccessPolicyName": {
      "type": "string"
    },
    "Input_iothub_sharedAccessPolicyKey": {
      "type": "string"
    },
    "Output_storageblob_Storage1_accountName": {
      "type": "string"
    },
    "Output_storageblob_Storage1_accountKey": {
      "type": "string"
    },
    "Output_storageblob_container": {
      "type": "string"
    },
    "Output_storageblob_pathPattern": {
      "type": "string"
    },
    "Output_storageblob_dateFormat": {
      "type": "string"
    },
    "Output_storageblob_timeFormat": {
      "type": "string"
    },
    "Output_storageblob_authenticationMode": {
      "type": "string"
    },
    "Output_notificationshub_serviceBusNamespace": {
      "type": "string"
    },
    "Output_notificationshub_eventHubName": {
      "type": "string"
    },
    "Output_notificationshub_partitionKey": {
      "type": "string"
    },
    "Output_notificationshub_sharedAccessPolicyName": {
      "type": "string"
    },
    "Output_notificationshub_sharedAccessPolicyKey": {
      "type": "string"
    },
    "Output_alertshub_serviceBusNamespace": {
      "type": "string"
    },
    "Output_alertshub_eventHubName": {
      "type": "string"
    },
    "Output_alertshub_partitionKey": {
      "type": "string"
    },
    "Output_alertshub_sharedAccessPolicyName": {
      "type": "string"
    },
    "Output_alertshub_sharedAccessPolicyKey": {
      "type": "string"
    },
    "Output_telemetryhub_serviceBusNamespace": {
      "type": "string"
    },
    "Output_telemetryhub_eventHubName": {
      "type": "string"
    },
    "Output_telemetryhub_partitionKey": {
      "type": "string"
    },
    "Output_telemetryhub_sharedAccessPolicyName": {
      "type": "string"
    },
    "Output_telemetryhub_sharedAccessPolicyKey": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "[parameters('ASAApiVersion')]",
      "name": "[parameters('StreamAnalyticsJobName')]",
      "location": "[parameters('Location')]",
      "properties": {
        "outputStartMode": "[parameters('OutputStartMode')]",
        "outputStartTime": "[if(equals(parameters('OutputStartMode'),'CustomTime'), parameters('OutputStartTime'), json('null'))]",
        "sku": {
          "name": "standard"
        },
        "jobType": "Cloud",
        "eventsOutOfOrderPolicy": "[parameters('EventsOutOfOrderPolicy')]",
        "outputErrorPolicy": "[parameters('OutputErrorPolicy')]",
        "eventsOutOfOrderMaxDelayInSeconds": "[parameters('EventsOutOfOrderMaxDelayInSeconds')]",
        "eventsLateArrivalMaxDelayInSeconds": "[parameters('EventsLateArrivalMaxDelayInSeconds')]",
        "dataLocale": "[parameters('DataLocale')]",
        "compatibilityLevel": "[parameters('CompatibilityLevel')]",
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[parameters('StreamingUnits')]",
            "query": "SELECT\r\n    GetMetadataPropertyValue(iothub, 'EventId') AS id,\r\n    System.Timestamp() AS SourceTimestamp,\r\n    nodeid AS NodeId,\r\n    applicationuri AS ApplicationUri,\r\n    iothub.IoTHub.ConnectionDeviceId AS ConnectionDeviceId,\r\n    /* dipdata */\r\n    LAST(DipData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN DipData is not NULL) AS DipValue,\r\n    AVG(DipData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN DipData is not NULL) AS DipAvg,\r\n    MAX(DipData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN DipData is not NULL) AS DipMax,\r\n    MIN(DipData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN DipData is not NULL) AS DipMin,\r\n    COUNT(DipData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN DipData is not NULL) AS DipCount,\r\n    /* spikedata */\r\n    LAST(SpikeData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN SpikeData is not NULL) AS SpikeValue,\r\n    AVG(SpikeData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN SpikeData is not NULL) AS SpikeAvg,\r\n    MAX(SpikeData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN SpikeData is not NULL) AS SpikeMax,\r\n    MIN(SpikeData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN SpikeData is not NULL) AS SpikeMin,\r\n    COUNT(SpikeData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN SpikeData is not NULL) AS SpikeCount,\r\n    /* positive trend */\r\n    LAST(PositiveTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN PositiveTrendData is not NULL) AS PositiveTrendValue,\r\n    AVG(PositiveTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN PositiveTrendData is not NULL) AS PositiveTrendAvg,\r\n    MAX(PositiveTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN PositiveTrendData is not NULL) AS PositiveTrendMax,\r\n    MIN(PositiveTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN PositiveTrendData is not NULL) AS PositiveTrendMin,\r\n    COUNT(PositiveTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN PositiveTrendData is not NULL) AS PositiveTrendCount,\r\n    /* negative trend */\r\n    LAST(NegativeTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN NegativeTrendData is not NULL) AS NegativeTrendValue,\r\n    AVG(NegativeTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN NegativeTrendData is not NULL) AS NegativeTrendAvg,\r\n    MAX(NegativeTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN NegativeTrendData is not NULL) AS NegativeTrendMax,\r\n    MIN(NegativeTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN NegativeTrendData is not NULL) AS NegativeTrendMin,\r\n    COUNT(NegativeTrendData) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN NegativeTrendData is not NULL) AS NegativeTrendCount,\r\n    /* randome signed */\r\n    LAST(RandomSignedInt32) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN RandomSignedInt32 is not NULL) AS RandomSignedValue,\r\n    AVG(RandomSignedInt32) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN RandomSignedInt32 is not NULL) AS RandomSignedAvg,\r\n    MAX(RandomSignedInt32) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN RandomSignedInt32 is not NULL) AS RandomSignedMax,\r\n    MIN(RandomSignedInt32) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN RandomSignedInt32 is not NULL) AS RandomSignedMin,\r\n    COUNT(RandomSignedInt32) OVER (PARTITION BY iothub.IoTHub.ConnectionDeviceId LIMIT DURATION(minute, 3) WHEN RandomSignedInt32 is not NULL) AS RandomSignedCount\r\nINTO storageblob\r\nFROM iothub\r\n\r\nSELECT\r\n    *,\r\n    iothub.IoTHub.ConnectionDeviceId AS ConnectionDeviceId\r\nINTO notificationshub\r\nFROM iothub\r\nWHERE AlternatingBoolean > 0\r\n\r\nSELECT\r\n    nodeid AS NodeId,\r\n    applicationuri AS ApplicationUri,\r\n    sourcetimestamp AS SourceTimestamp,\r\n    tag AS Tag,\r\n    value AS Value,\r\n    isalert AS IsAlert,\r\n    anomalyscore AS AnomalyScore,\r\n    iothub.IoTHub.ConnectionDeviceId AS ConnectionDeviceId\r\nINTO alertshub\r\nFROM iothub\r\nWHERE isalert > 0\r\n\r\nSELECT\r\n    *,\r\n    iothub.IoTHub.ConnectionDeviceId AS ConnectionDeviceId\r\nINTO telemetryhub\r\nFROM iothub\r\nWHERE isalert IS NULL"
          }
        },
        "inputs": [
          {
            "name": "iothub",
            "properties": {
              "type": "Stream",
              "datasource": {
                "type": "Microsoft.Devices/IotHubs",
                "properties": {
                  "iotHubNamespace": "[parameters('Input_iothub_iotHubNamespace')]",
                  "consumerGroupName": "[parameters('Input_iothub_consumerGroupName')]",
                  "endpoint": "[parameters('Input_iothub_endpoint')]",
                  "sharedAccessPolicyName": "[parameters('Input_iothub_sharedAccessPolicyName')]",
                  "sharedAccessPolicyKey": "[parameters('Input_iothub_sharedAccessPolicyKey')]"
                }
              },
              "compression": {
                "type": "None"
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8"
                }
              }
            }
          }
        ],
        "outputs": [
          {
            "name": "storageblob",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[parameters('Output_storageblob_Storage1_accountName')]",
                      "accountKey": "[parameters('Output_storageblob_Storage1_accountKey')]"
                    }
                  ],
                  "container": "[parameters('Output_storageblob_container')]",
                  "pathPattern": "[parameters('Output_storageblob_pathPattern')]",
                  "dateFormat": "[parameters('Output_storageblob_dateFormat')]",
                  "timeFormat": "[parameters('Output_storageblob_timeFormat')]",
                  "authenticationMode": "[parameters('Output_storageblob_authenticationMode')]"
                }
              }
            }
          },
          {
            "name": "notificationshub",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[parameters('Output_notificationshub_serviceBusNamespace')]",
                  "eventHubName": "[parameters('Output_notificationshub_eventHubName')]",
                  "partitionKey": "[parameters('Output_notificationshub_partitionKey')]",
                  "sharedAccessPolicyName": "[parameters('Output_notificationshub_sharedAccessPolicyName')]",
                  "sharedAccessPolicyKey": "[parameters('Output_notificationshub_sharedAccessPolicyKey')]"
                }
              }
            }
          },
          {
            "name": "alertshub",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[parameters('Output_alertshub_serviceBusNamespace')]",
                  "eventHubName": "[parameters('Output_alertshub_eventHubName')]",
                  "partitionKey": "[parameters('Output_alertshub_partitionKey')]",
                  "sharedAccessPolicyName": "[parameters('Output_alertshub_sharedAccessPolicyName')]",
                  "sharedAccessPolicyKey": "[parameters('Output_alertshub_sharedAccessPolicyKey')]"
                }
              }
            }
          },
          {
            "name": "telemetryhub",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[parameters('Output_telemetryhub_serviceBusNamespace')]",
                  "eventHubName": "[parameters('Output_telemetryhub_eventHubName')]",
                  "partitionKey": "[parameters('Output_telemetryhub_partitionKey')]",
                  "sharedAccessPolicyName": "[parameters('Output_telemetryhub_sharedAccessPolicyName')]",
                  "sharedAccessPolicyKey": "[parameters('Output_telemetryhub_sharedAccessPolicyKey')]"
                }
              }
            }
          }
        ]
      }
    }
  ]
}